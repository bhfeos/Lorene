###############################################################
#
#  Edit the following lines according to your implementation.
#
#  The environment variable HOME_LORENE (root directory for the
#   Lorene implementation) must be have been already defined.
#
###############################################################

#===============================#
#           COMPILERS		#
#===============================#

# C++ compiler:
# ------------
CXX 	 = g++

# Options for the C++ compiler to produce the optimized library:
# -------------------------------------------------------------
CXXFLAGS = -mtune=native -march=native -O3 -DNDEBUG -pedantic -Wall -W \
  -Wundef -Wshadow -Wcast-qual -Wcast-align -Wconversion \
  -Wabi -Wold-style-cast -Woverloaded-virtual -fPIC

# Options for the C++ compiler to produce the library for debugging:
# -----------------------------------------------------------------
CXXFLAGS_G = -mtune=native -march=native -g -pedantic -Wall -W -Wundef \
  -Wshadow -Wcast-qual -Wcast-align -Wconversion \
  -Wabi -Wold-style-cast -Woverloaded-virtual -fPIC

# Path for the include files:
# --------------------------
INC	= -I$(HOME_LORENE)/C++/Include \
          -I$(HOME_LORENE)/C++/Include_extra 

# Converting archives to random libraries (if required, otherwise just ls)
# ------------------------------------------------------------------------
RANLIB = ls

# Fortran 77 compiler:
# -------------------
F77 	 = gfortran

# Options for the Fortran 77 compiler to produce the optimized library:
# ---------------------------------------------------------------------
F77FLAGS =  -ffixed-form -ffixed-line-length-none -O2 -fPIC

# Options for the Fortran 77 compiler to produce the library for debugging:
# ------------------------------------------------------------------------
F77FLAGS_G = -ffixed-form -ffixed-line-length-none -g -fPIC

#===============================#
#           MAKEDEPEND	        #
#===============================#

# First line uses the C precompiler (usually called cpp)
# if yours does not support the -M option try to figure out
# how to output dependencies file, or use makedepend (2nd line)
#--------------------------------------------------------------
MAKEDEPEND = cpp $(INC) -M >> $(df).d $<
#MAKEDEPEND = touch $(df).d && makedepend $(INC) -f $(df).d $<
DEPDIR = .deps

#===============================#
#      SYSTEM LIBRARIES		#
#===============================#

# FFT library: FFT991 in Fortran coming with Lorene
#              FFTW3 library (must be installed separately)
# -------------------------------------------------------------------
FFT_DIR = FFTW3

# C, C++ library, mathematical library and Fortran library
# ---------------------------------------------------------
ifeq ($(FFT_DIR),FFTW3)
LIB_CXX = -L/usr/local/lib -lfftw3 -lgfortran -lstdc++ -lm
else 
LIB_CXX = -lgfortran -lstdc++ -lm
endif

# Linear Algebra Package (LAPACK) library
# ---------------------------------------
LIB_LAPACK = -L/usr/local/lib -llapack -lblas

# Graphical libraries: PGPLOT, PNG and X11
# ----------------------------------------
LIB_PGPLOT = -L/usr/X11R6/lib -lcpgplot -lpgplot -lX11

# GNU scientific library
# -----------------------------------
LIB_GSL = -lgsl -lgslcblas




